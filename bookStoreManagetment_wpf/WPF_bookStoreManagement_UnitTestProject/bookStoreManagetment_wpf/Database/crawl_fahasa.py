# -*- coding: utf-8 -*-
"""crawl_fahasa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10YKnCtmiOXw83sOfTkQ2QyNXScJq4oLe

#Crawl data

##Văn học
"""

import bs4
import requests
import re

def get_page_content(url):
    page = requests.get(url, verify=False)
    return bs4.BeautifulSoup(page.text,"html.parser")

count = 1
lst_product_link = []
lst_product_img = []
lst_title = []
lst_price = []
lst_type = []
lst_book_type = []
lst_size = []
lst_number_of_page = []
lst_author = []
lst_translator = []
lst_nxb = []
lst_nph = []
lst_barcode = []
lst_description = []
query = ""

for page in range (3):
  url = "https://nhasachphuongnam.com/vi/van-hoc-vi-page-{}.html".format(page)
  content_page = get_page_content(url)  #get content page
  res = content_page.findAll('a') #select all <a> tag
  mydivs = content_page.find_all("div", {"class": "ty-column4"}) #select all <div> tag with class="ty-column4"(product card)


  for div_0 in mydivs:  
    list_a = div_0.find_all("a")
    img_src = list_a[0].find_all("img")[0].get("data-src")  #image of book source
    title = ""
    for check_title in list_a:
      if(str(check_title.get("title"))!="None"):
        title = str(check_title.get("title"))      #book name
        break
    product_src = list_a[0].get("href")  #book source
    product_content = get_page_content(product_src) #get link product
    barcode_div = product_content.find_all("div", {"class":"et-info-wrapper clearfix"})
    barcode_span = barcode_div[0].find_all("span")
    barcode = barcode_span[2].getText()
    print(barcode)
    get_des = product_content.find_all("div",{"id":"content_description"})
    p_des = get_des[0].find_all("p")
    # for item in p_des:
    #   try:
    #     print(p_des.getText())
    #   except:
    des = ""
    for item in p_des:
      des = des + item.getText() + " "
      
        
    # print(p_des)
    # print(len(p_des))
    lst_product_feature = product_content.find_all("div", {"class":"ty-product-feature"})
    #print(lst_product_feature[0])
    lst_feature = {"Thể loại:":"None", "Loại sản phẩm:":"None", "Kích thước:":"None", "Số trang:":"None", "Tác giả:":"None", "Dịch giả:":"None", "Nhà Xuất Bản:":"None", "Nhà Phát Hành:":"None"}
    for product_feature in lst_product_feature:
      feature = product_feature.find_all("span", {"class":"ty-product-feature__label"})[0].getText()
      value = product_feature.find_all("div", {"class":"ty-product-feature__value"})[0].getText()
      lst_feature[feature]=value
    for f in lst_feature:
      #print(f)
      if(f=="Thể loại:"):
        lst_type.append(lst_feature[f])
      if(f=="Loại sản phẩm:"):
        lst_book_type.append(lst_feature[f])
      if(f=="Kích thước:"):
        lst_size.append(lst_feature[f])
      if(f=="Số trang:"):
        lst_number_of_page.append(lst_feature[f])
      if(f=="Tác giả:"):
        lst_author.append(lst_feature[f])
      if(f=="Dịch giả:"):
        lst_translator.append(lst_feature[f])
      if(f== "Nhà Xuất Bản:"):
        lst_nxb.append(lst_feature[f])
      if(f=="Nhà Phát Hành:"):
        lst_nph.append(lst_feature[f])

    ty_price = div_0.find_all("span", {"class": "ty-price-num"})
    price = int(ty_price[0].getText().replace(",",""))
    lst_product_link.append(product_src)
    lst_product_img.append(img_src)
    lst_title.append(title)
    lst_price.append(price)
    lst_barcode.append(barcode)
    lst_description.append(des)
    print("Crawl book {}".format(count))
    count +=1
print("Done!!!")  
from google.colab import output
output.clear()

# for i in range (72):
#     print("Number {}:".format(i+1))
#     print("\t" + "Link sản phẩm: {}".format(lst_product_link[i]))
#     print("\t" + "Link hình ảnh: {}".format(lst_product_img[i]))
#     print("\t" + "Tên sản phẩm: {}".format(lst_title[i]))
#     print("\t" + "Giá: {}".format(str(price)))
#     print("\t" + "Thể loại: {}".format(lst_type[i]))
#     print("\t" + "Loại sách: {}".format(lst_book_type[i]))
#     print("\t" + "Kích thước: {}".format(str(lst_size[i])))
#     print("\t" + "Số trang: {}".format(str(lst_number_of_page[i])))
#     print("\t" + "Tác giả: {}".format(lst_author[i]))
#     print("\t" + "Dịch giả: {}".format(lst_translator[i]))
#     print("\t" + "NXB: {}".format(lst_nxb[i]))
#     print("\t" + "NPH : {}".format(lst_nph[i]))

from pandas import DataFrame

C = {'Link sản phẩm': lst_product_link,
     'Link hình ảnh': lst_product_img,
     'Tên sản phẩm': lst_title,
     'Giá': lst_price,
     'Thể loại': lst_type,
     'Loại sách': lst_book_type,
     'Kích thước': lst_size,
     'Số trang': lst_number_of_page,
     'Tác giả': lst_author,
     'Dịch giả': lst_translator,
     'NXB': lst_nxb,
     'NPH': lst_nph,
     'Barcode': lst_barcode,
     'Description': lst_description,
    }
df = DataFrame(C, columns= ['Link sản phẩm', 'Link hình ảnh', 'Tên sản phẩm', 'Giá', 'Thể loại', 'Loại sách', 'Kích thước', 'Số trang', 'Tác giả', 'Dịch giả', 'NXB', 'NPH', 'Barcode', 'Description'])
export_csv = df.to_csv (r'/content/sachvanhoc_new2.csv', index = None, header=True, encoding="utf-8")

"""##Tâm lý/Giáo dục"""

import bs4
import requests
import re

def get_page_content(url):
    page = requests.get(url, verify=False)
    return bs4.BeautifulSoup(page.text,"html.parser")

count = 1
lst_product_link = []
lst_product_img = []
lst_title = []
lst_price = []
lst_type = []
lst_book_type = []
lst_size = []
lst_number_of_page = []
lst_author = []
lst_translator = []
lst_nxb = []
lst_nph = []
lst_barcode = []
lst_description = []
query = ""

for page in range (3):
  url = "https://nhasachphuongnam.com/vi/day-nghe-page-{}.html".format(page)
  content_page = get_page_content(url)  #get content page
  res = content_page.findAll('a') #select all <a> tag
  mydivs = content_page.find_all("div", {"class": "ty-column4"}) #select all <div> tag with class="ty-column4"(product card)


  for div_0 in mydivs:  
    list_a = div_0.find_all("a")
    img_src = list_a[0].find_all("img")[0].get("data-src")  #image of book source
    title = ""
    for check_title in list_a:
      if(str(check_title.get("title"))!="None"):
        title = str(check_title.get("title"))      #book name
        break
    product_src = list_a[0].get("href")  #book source
    product_content = get_page_content(product_src) #get link product

    barcode_div = product_content.find_all("div", {"class":"et-info-wrapper clearfix"})
    barcode_span = barcode_div[0].find_all("span")
    barcode = barcode_span[2].getText()
    print(barcode)
    get_des = product_content.find_all("div",{"id":"content_description"})
    p_des = get_des[0].find_all("p")
    # for item in p_des:
    #   try:
    #     print(p_des.getText())
    #   except:
    des = ""
    for item in p_des:
      des = des + item.getText() + " "

    lst_product_feature = product_content.find_all("div", {"class":"ty-product-feature"})
    #print(lst_product_feature[0])
    lst_feature = {"Thể loại:":"None", "Loại sản phẩm:":"None", "Kích thước:":"None", "Số trang:":"None", "Tác giả:":"None", "Dịch giả:":"None", "Nhà Xuất Bản:":"None", "Nhà Phát Hành:":"None"}
    for product_feature in lst_product_feature:
      feature = product_feature.find_all("span", {"class":"ty-product-feature__label"})[0].getText()
      value = product_feature.find_all("div", {"class":"ty-product-feature__value"})[0].getText()
      lst_feature[feature]=value
    for f in lst_feature:
      #print(f)
      if(f=="Thể loại:"):
        lst_type.append(lst_feature[f])
      if(f=="Loại sản phẩm:"):
        lst_book_type.append(lst_feature[f])
      if(f=="Kích thước:"):
        lst_size.append(lst_feature[f])
      if(f=="Số trang:"):
        lst_number_of_page.append(lst_feature[f])
      if(f=="Tác giả:"):
        lst_author.append(lst_feature[f])
      if(f=="Dịch giả:"):
        lst_translator.append(lst_feature[f])
      if(f== "Nhà Xuất Bản:"):
        lst_nxb.append(lst_feature[f])
      if(f=="Nhà Phát Hành:"):
        lst_nph.append(lst_feature[f])

    ty_price = div_0.find_all("span", {"class": "ty-price-num"})
    price = int(ty_price[0].getText().replace(",",""))
    lst_product_link.append(product_src)
    lst_product_img.append(img_src)
    lst_title.append(title)
    lst_price.append(price)
    lst_barcode.append(barcode)
    lst_description.append(des)
    print("Crawl book {}".format(count))
    count +=1
print("Done!!!")  
from google.colab import output
output.clear()

from pandas import DataFrame

C = {'Link sản phẩm': lst_product_link,
     'Link hình ảnh': lst_product_img,
     'Tên sản phẩm': lst_title,
     'Giá': lst_price,
     'Thể loại': lst_type,
     'Loại sách': lst_book_type,
     'Kích thước': lst_size,
     'Số trang': lst_number_of_page,
     'Tác giả': lst_author,
     'Dịch giả': lst_translator,
     'NXB': lst_nxb,
     'NPH': lst_nph,
     'Barcode': lst_barcode,
     'Description': lst_description,
    }
df = DataFrame(C, columns= ['Link sản phẩm', 'Link hình ảnh', 'Tên sản phẩm', 'Giá', 'Thể loại', 'Loại sách', 'Kích thước', 'Số trang', 'Tác giả', 'Dịch giả', 'NXB', 'NPH', 'Barcode', 'Description'])
export_csv = df.to_csv (r'/content/sachtamlygiaoduc_new2.csv', index = None, header=True, encoding="utf-8")

"""##Teen"""

import bs4
import requests
import re

def get_page_content(url):
    page = requests.get(url, verify=False)
    return bs4.BeautifulSoup(page.text,"html.parser")

count = 1
lst_product_link = []
lst_product_img = []
lst_title = []
lst_price = []
lst_type = []
lst_book_type = []
lst_size = []
lst_number_of_page = []
lst_author = []
lst_translator = []
lst_nxb = []
lst_nph = []
lst_barcode = []
lst_description = []
query = ""

for page in range (3):
  url = "https://nhasachphuongnam.com/vi/teen-page-{}.html".format(page)
  content_page = get_page_content(url)  #get content page
  res = content_page.findAll('a') #select all <a> tag
  mydivs = content_page.find_all("div", {"class": "ty-column4"}) #select all <div> tag with class="ty-column4"(product card)


  for div_0 in mydivs:  
    list_a = div_0.find_all("a")
    img_src = list_a[0].find_all("img")[0].get("data-src")  #image of book source
    title = ""
    for check_title in list_a:
      if(str(check_title.get("title"))!="None"):
        title = str(check_title.get("title"))      #book name
        break
    product_src = list_a[0].get("href")  #book source
    product_content = get_page_content(product_src) #get link product

    barcode_div = product_content.find_all("div", {"class":"et-info-wrapper clearfix"})
    barcode_span = barcode_div[0].find_all("span")
    barcode = barcode_span[2].getText()
    print(barcode)
    get_des = product_content.find_all("div",{"id":"content_description"})
    p_des = get_des[0].find_all("p")
    # for item in p_des:
    #   try:
    #     print(p_des.getText())
    #   except:
    des = ""
    for item in p_des:
      des = des + item.getText() + " "

    lst_product_feature = product_content.find_all("div", {"class":"ty-product-feature"})
    #print(lst_product_feature[0])
    lst_feature = {"Thể loại:":"None", "Loại sản phẩm:":"None", "Kích thước:":"None", "Số trang:":"None", "Tác giả:":"None", "Dịch giả:":"None", "Nhà Xuất Bản:":"None", "Nhà Phát Hành:":"None"}
    for product_feature in lst_product_feature:
      feature = product_feature.find_all("span", {"class":"ty-product-feature__label"})[0].getText()
      value = product_feature.find_all("div", {"class":"ty-product-feature__value"})[0].getText()
      lst_feature[feature]=value
    for f in lst_feature:
      #print(f)
      if(f=="Thể loại:"):
        lst_type.append(lst_feature[f])
      if(f=="Loại sản phẩm:"):
        lst_book_type.append(lst_feature[f])
      if(f=="Kích thước:"):
        lst_size.append(lst_feature[f])
      if(f=="Số trang:"):
        lst_number_of_page.append(lst_feature[f])
      if(f=="Tác giả:"):
        lst_author.append(lst_feature[f])
      if(f=="Dịch giả:"):
        lst_translator.append(lst_feature[f])
      if(f== "Nhà Xuất Bản:"):
        lst_nxb.append(lst_feature[f])
      if(f=="Nhà Phát Hành:"):
        lst_nph.append(lst_feature[f])

    ty_price = div_0.find_all("span", {"class": "ty-price-num"})
    price = int(ty_price[0].getText().replace(",",""))
    lst_product_link.append(product_src)
    lst_product_img.append(img_src)
    lst_title.append(title)
    lst_price.append(price)
    lst_barcode.append(barcode)
    lst_description.append(des)
    print("Crawl book {}".format(count))
    count +=1
print("Done!!!")  
from google.colab import output
output.clear()

from pandas import DataFrame

C = {'Link sản phẩm': lst_product_link,
     'Link hình ảnh': lst_product_img,
     'Tên sản phẩm': lst_title,
     'Giá': lst_price,
     'Thể loại': lst_type,
     'Loại sách': lst_book_type,
     'Kích thước': lst_size,
     'Số trang': lst_number_of_page,
     'Tác giả': lst_author,
     'Dịch giả': lst_translator,
     'NXB': lst_nxb,
     'NPH': lst_nph,
     'Barcode': lst_barcode,
     'Description': lst_description,
    }
df = DataFrame(C, columns= ['Link sản phẩm', 'Link hình ảnh', 'Tên sản phẩm', 'Giá', 'Thể loại', 'Loại sách', 'Kích thước', 'Số trang', 'Tác giả', 'Dịch giả', 'NXB', 'NPH', 'Barcode', 'Description'])
export_csv = df.to_csv (r'/content/sachteen_new2.csv', index = None, header=True, encoding="utf-8")

"""##Kinh tế/Kinh doanh"""

import bs4
import requests
import re

def get_page_content(url):
    page = requests.get(url, verify=False)
    return bs4.BeautifulSoup(page.text,"html.parser")

count = 1
lst_product_link = []
lst_product_img = []
lst_title = []
lst_price = []
lst_type = []
lst_book_type = []
lst_size = []
lst_number_of_page = []
lst_author = []
lst_translator = []
lst_nxb = []
lst_nph = []
lst_barcode = []
lst_description = []
query = ""

for page in range (3):
  url = "https://nhasachphuongnam.com/vi/kinh-te-kinh-doanh-page-{}.html".format(page)
  content_page = get_page_content(url)  #get content page
  res = content_page.findAll('a') #select all <a> tag
  mydivs = content_page.find_all("div", {"class": "ty-column4"}) #select all <div> tag with class="ty-column4"(product card)


  for div_0 in mydivs:  
    list_a = div_0.find_all("a")
    img_src = list_a[0].find_all("img")[0].get("data-src")  #image of book source
    title = ""
    for check_title in list_a:
      if(str(check_title.get("title"))!="None"):
        title = str(check_title.get("title"))      #book name
        break
    product_src = list_a[0].get("href")  #book source
    product_content = get_page_content(product_src) #get link product

    barcode_div = product_content.find_all("div", {"class":"et-info-wrapper clearfix"})
    barcode_span = barcode_div[0].find_all("span")
    barcode = barcode_span[2].getText()
    print(barcode)
    get_des = product_content.find_all("div",{"id":"content_description"})
    p_des = get_des[0].find_all("p")
    # for item in p_des:
    #   try:
    #     print(p_des.getText())
    #   except:
    des = ""
    for item in p_des:
      des = des + item.getText() + " "

    lst_product_feature = product_content.find_all("div", {"class":"ty-product-feature"})
    #print(lst_product_feature[0])
    lst_feature = {"Thể loại:":"None", "Loại sản phẩm:":"None", "Kích thước:":"None", "Số trang:":"None", "Tác giả:":"None", "Dịch giả:":"None", "Nhà Xuất Bản:":"None", "Nhà Phát Hành:":"None"}
    for product_feature in lst_product_feature:
      feature = product_feature.find_all("span", {"class":"ty-product-feature__label"})[0].getText()
      value = product_feature.find_all("div", {"class":"ty-product-feature__value"})[0].getText()
      lst_feature[feature]=value
    for f in lst_feature:
      #print(f)
      if(f=="Thể loại:"):
        lst_type.append(lst_feature[f])
      if(f=="Loại sản phẩm:"):
        lst_book_type.append(lst_feature[f])
      if(f=="Kích thước:"):
        lst_size.append(lst_feature[f])
      if(f=="Số trang:"):
        if (lst_feature[f]!=None):
          lst_number_of_page.append(lst_feature[f])
        else:
          lst_number_of_page.append(107)
      if(f=="Tác giả:"):
        lst_author.append(lst_feature[f])
      if(f=="Dịch giả:"):
        lst_translator.append(lst_feature[f])
      if(f== "Nhà Xuất Bản:"):
        lst_nxb.append(lst_feature[f])
      if(f=="Nhà Phát Hành:"):
        lst_nph.append(lst_feature[f])

    ty_price = div_0.find_all("span", {"class": "ty-price-num"})
    price = int(ty_price[0].getText().replace(",",""))
    lst_product_link.append(product_src)
    lst_product_img.append(img_src)
    lst_title.append(title)
    lst_price.append(price)
    lst_barcode.append(barcode)
    lst_description.append(des)
    print("Crawl book {}".format(count))
    count +=1
print("Done!!!")  
from google.colab import output
output.clear()

from pandas import DataFrame

C = {'Link sản phẩm': lst_product_link,
     'Link hình ảnh': lst_product_img,
     'Tên sản phẩm': lst_title,
     'Giá': lst_price,
     'Thể loại': lst_type,
     'Loại sách': lst_book_type,
     'Kích thước': lst_size,
     'Số trang': lst_number_of_page,
     'Tác giả': lst_author,
     'Dịch giả': lst_translator,
     'NXB': lst_nxb,
     'NPH': lst_nph,
     'Barcode': lst_barcode,
     'Description': lst_description,
    }
df = DataFrame(C, columns= ['Link sản phẩm', 'Link hình ảnh', 'Tên sản phẩm', 'Giá', 'Thể loại', 'Loại sách', 'Kích thước', 'Số trang', 'Tác giả', 'Dịch giả', 'NXB', 'NPH', 'Barcode', 'Description'])
export_csv = df.to_csv (r'/content/sachkinhtekinhdoanh_new2.csv', index = None, header=True, encoding="utf-8")

"""##Thiếu nhi"""

import bs4
import requests
import re

def get_page_content(url):
    page = requests.get(url, verify=False)
    return bs4.BeautifulSoup(page.text,"html.parser")

count = 1
lst_product_link = []
lst_product_img = []
lst_title = []
lst_price = []
lst_type = []
lst_book_type = []
lst_size = []
lst_number_of_page = []
lst_author = []
lst_translator = []
lst_nxb = []
lst_nph = []
lst_barcode = []
lst_description = []
query = ""

for page in range (3):
  url = "https://nhasachphuongnam.com/vi/thieu-nhi-vi-page-{}.html".format(page)
  content_page = get_page_content(url)  #get content page
  res = content_page.findAll('a') #select all <a> tag
  mydivs = content_page.find_all("div", {"class": "ty-column4"}) #select all <div> tag with class="ty-column4"(product card)


  for div_0 in mydivs:  
    list_a = div_0.find_all("a")
    img_src = list_a[0].find_all("img")[0].get("data-src")  #image of book source
    title = ""
    for check_title in list_a:
      if(str(check_title.get("title"))!="None"):
        title = str(check_title.get("title"))      #book name
        break
    product_src = list_a[0].get("href")  #book source
    product_content = get_page_content(product_src) #get link product

    barcode_div = product_content.find_all("div", {"class":"et-info-wrapper clearfix"})
    barcode_span = barcode_div[0].find_all("span")
    barcode = barcode_span[2].getText()
    print(barcode)
    get_des = product_content.find_all("div",{"id":"content_description"})
    p_des = get_des[0].find_all("p")
    # for item in p_des:
    #   try:
    #     print(p_des.getText())
    #   except:
    des = ""
    for item in p_des:
      des = des + item.getText() + " "

    lst_product_feature = product_content.find_all("div", {"class":"ty-product-feature"})
    #print(lst_product_feature[0])
    lst_feature = {"Thể loại:":"None", "Loại sản phẩm:":"None", "Kích thước:":"None", "Số trang:":"None", "Tác giả:":"None", "Dịch giả:":"None", "Nhà Xuất Bản:":"None", "Nhà Phát Hành:":"None"}
    for product_feature in lst_product_feature:
      feature = product_feature.find_all("span", {"class":"ty-product-feature__label"})[0].getText()
      value = product_feature.find_all("div", {"class":"ty-product-feature__value"})[0].getText()
      lst_feature[feature]=value
    for f in lst_feature:
      #print(f)
      if(f=="Thể loại:"):
        lst_type.append(lst_feature[f])
      if(f=="Loại sản phẩm:"):
        lst_book_type.append(lst_feature[f])
      if(f=="Kích thước:"):
        lst_size.append(lst_feature[f])
      if(f=="Số trang:"):
        lst_number_of_page.append(lst_feature[f])
      if(f=="Tác giả:"):
        lst_author.append(lst_feature[f])
      if(f=="Dịch giả:"):
        lst_translator.append(lst_feature[f])
      if(f== "Nhà Xuất Bản:"):
        lst_nxb.append(lst_feature[f])
      if(f=="Nhà Phát Hành:"):
        lst_nph.append(lst_feature[f])

    ty_price = div_0.find_all("span", {"class": "ty-price-num"})
    price = int(ty_price[0].getText().replace(",",""))
    lst_product_link.append(product_src)
    lst_product_img.append(img_src)
    lst_title.append(title)
    lst_price.append(price)
    lst_barcode.append(barcode)
    lst_description.append(des)
    print("Crawl book {}".format(count))
    count +=1
print("Done!!!")  
from google.colab import output
output.clear()

from pandas import DataFrame

C = {'Link sản phẩm': lst_product_link,
     'Link hình ảnh': lst_product_img,
     'Tên sản phẩm': lst_title,
     'Giá': lst_price,
     'Thể loại': lst_type,
     'Loại sách': lst_book_type,
     'Kích thước': lst_size,
     'Số trang': lst_number_of_page,
     'Tác giả': lst_author,
     'Dịch giả': lst_translator,
     'NXB': lst_nxb,
     'NPH': lst_nph,
     'Barcode': lst_barcode,
     'Description': lst_description,
    }
df = DataFrame(C, columns= ['Link sản phẩm', 'Link hình ảnh', 'Tên sản phẩm', 'Giá', 'Thể loại', 'Loại sách', 'Kích thước', 'Số trang', 'Tác giả', 'Dịch giả', 'NXB', 'NPH', 'Barcode', 'Description'])
export_csv = df.to_csv (r'/content/sachthieunhi_new2.csv', index = None, header=True, encoding="utf-8")

"""#Create query in sql"""

import random
count = 1;

from csv import reader
# open file in read mode
query_sachkinhdoanh_item = ""
query_sachkinhdoanh_infor = ""
with open('/content/sachkinhtekinhdoanh_new2.csv', 'r') as read_obj:
    # pass the file object to reader() to get the reader object
    csv_reader = reader(read_obj)
    header = next(csv_reader)
    # Iterate over each row in the csv using reader object
    if (header!=None):
      for row in csv_reader:
          # row variable is a list that represents a row in csv
          #print()
          pageNum = 0;
          des = ""
          if (row[7]==None):
            print("true")
            pageNum = 107;
          else:
            pageNum = row[7]
          if (len(row[13])>2000):
            des = row[13][:1950]
          else:
            des = row[13]
          #print(len(row[13]))
          lst_ncc = ["NCC001", "NCC002", "NCC003", "NCC004", "NCC005",
                     "NCC006", "NCC007", "NCC008", "NCC009", "NCC010"]
          ncc = random.choice(lst_ncc)
          itemlink = row[0]
          imagelink = row[1]
          nameitem = row[2]
          price = row[3]
          if(price=="None"):
            price = "100000"
          content_type = row[4]
          if(content_type=="None"):
            content_type = "Tự do"
          book_type = row[5]
          if(book_type=="None"):
            book_type="Bìa mềm"
          size = row[6]
          if(size=="None"):
            size="15.5 x 23.5 cm"
          page_number = row[7]
          if(page_number=="None"):
            page_number = "156"
          author = row[8]
          if(author=="None"):
            author = "Nhiều tác giả"
          translator = row[9]
          if(translator=="None"):
            translator="Hoàng Thắng"
          nxb = row[10]
          if(nxb=="None"):
            nxb="Kin Đồng"
          nph = row[11]
          if(nph=="None"):
            nph="THBooks"
          barcode = row[12]
          quantity = "100"
          if(count<10):
          
              id = "BOOK00{}".format(count)
          
          else:
          
              if(count<100):
              
                  id = "BOOK0{}".format(count)
              
              else:
              
                  id = "BOOK{}".format(count)
          
          tmp_query_sachkinhdoanh_item = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',100,N'book',N'{}',N'quyển'),".format(id,itemlink,imagelink,nameitem,price,des,barcode,ncc)
          tmp_query_sachkinhdoanh_infor = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',N'{}',N'{}'),".format(id,content_type,book_type,size,page_number,author,translator,nxb,nph)
          query_sachkinhdoanh_item = query_sachkinhdoanh_item + tmp_query_sachkinhdoanh_item + "\n"
          query_sachkinhdoanh_infor = query_sachkinhdoanh_infor + tmp_query_sachkinhdoanh_infor + "\n"
          count+=1
with open("query_sachkinhdoanh_item.txt","w") as qf:
  qf.write(query_sachkinhdoanh_item)
  qf.close()
with open("query_sachkinhdoanh_infor.txt","w") as qf:
  qf.write(query_sachkinhdoanh_infor)
  qf.close()

from csv import reader
# open file in read mode
query_sachtamlygiaoduc_item = ""
query_sachtamlygiaoduc_infor = ""
with open('/content/sachtamlygiaoduc_new2.csv', 'r') as read_obj:
    # pass the file object to reader() to get the reader object
    csv_reader = reader(read_obj)
    header = next(csv_reader)
    # Iterate over each row in the csv using reader object
    if (header!=None):
      for row in csv_reader:
          # row variable is a list that represents a row in csv
          #print()
          pageNum = 0;
          des = ""
          if (row[7]==None):
            print("true")
            pageNum = 107;
          else:
            pageNum = row[7]
          if (len(row[13])>2000):
            des = row[13][:1950]
          else:
            des = row[13]
          #print(len(row[13]))
          lst_ncc = ["NCC001", "NCC002", "NCC003", "NCC004", "NCC005",
                     "NCC006", "NCC007", "NCC008", "NCC009", "NCC010"]
          ncc = random.choice(lst_ncc)
          itemlink = row[0]
          imagelink = row[1]
          nameitem = row[2]
          price = row[3]
          if(price=="None"):
            price = "100000"
          content_type = row[4]
          if(content_type=="None"):
            content_type = "Tự do"
          book_type = row[5]
          if(book_type=="None"):
            book_type="Bìa mềm"
          size = row[6]
          if(size=="None"):
            size="15.5 x 23.5 cm"
          page_number = row[7]
          if(page_number=="None"):
            page_number = "156"
          author = row[8]
          if(author=="None"):
            author = "Nhiều tác giả"
          translator = row[9]
          if(translator=="None"):
            translator="Hoàng Thắng"
          nxb = row[10]
          if(nxb=="None"):
            nxb="Kin Đồng"
          nph = row[11]
          if(nph=="None"):
            nph="THBooks"
          barcode = row[12]
          quantity = "100"
          if(count<10):
          
              id = "BOOK00{}".format(count)
          
          else:
          
              if(count<100):
              
                  id = "BOOK0{}".format(count)
              
              else:
              
                  id = "BOOK{}".format(count)
          
          tmp_query_sachtamlygiaoduc_item = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',100,N'book',N'{}',N'quyển'),".format(id,itemlink,imagelink,nameitem,price,des,barcode,ncc)
          tmp_query_sachtamlygiaoduc_infor = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',N'{}',N'{}'),".format(id,content_type,book_type,size,page_number,author,translator,nxb,nph)
          query_sachtamlygiaoduc_item = query_sachtamlygiaoduc_item + tmp_query_sachtamlygiaoduc_item + "\n"
          query_sachtamlygiaoduc_infor = query_sachtamlygiaoduc_infor + tmp_query_sachtamlygiaoduc_infor + "\n"
          count+=1
with open("query_sachtamlygiaoduc_item.txt","w") as qf:
  qf.write(query_sachtamlygiaoduc_item)
  qf.close()
with open("query_sachtamlygiaoduc_infor.txt","w") as qf:
  qf.write(query_sachtamlygiaoduc_infor)
  qf.close()

from csv import reader
# open file in read mode
query_sachteen_item = ""
query_sachteen_infor = ""
with open('/content/sachteen_new2.csv', 'r') as read_obj:
    # pass the file object to reader() to get the reader object
    csv_reader = reader(read_obj)
    header = next(csv_reader)
    # Iterate over each row in the csv using reader object
    if (header!=None):
      for row in csv_reader:
          # row variable is a list that represents a row in csv
          #print()
          pageNum = 0;
          des = ""
          if (row[7]==None):
            print("true")
            pageNum = 107;
          else:
            pageNum = row[7]
          if (len(row[13])>2000):
            des = row[13][:1950]
          else:
            des = row[13]
          #print(len(row[13]))
          lst_ncc = ["NCC001", "NCC002", "NCC003", "NCC004", "NCC005",
                     "NCC006", "NCC007", "NCC008", "NCC009", "NCC010"]
          ncc = random.choice(lst_ncc)
          itemlink = row[0]
          imagelink = row[1]
          nameitem = row[2]
          price = row[3]
          if(price=="None"):
            price = "100000"
          content_type = row[4]
          if(content_type=="None"):
            content_type = "Tự do"
          book_type = row[5]
          if(book_type=="None"):
            book_type="Bìa mềm"
          size = row[6]
          if(size=="None"):
            size="15.5 x 23.5 cm"
          page_number = row[7]
          if(page_number=="None"):
            page_number = "156"
          author = row[8]
          if(author=="None"):
            author = "Nhiều tác giả"
          translator = row[9]
          if(translator=="None"):
            translator="Hoàng Thắng"
          nxb = row[10]
          if(nxb=="None"):
            nxb="Kin Đồng"
          nph = row[11]
          if(nph=="None"):
            nph="THBooks"
          barcode = row[12]
          quantity = "100"
          if(count<10):
          
              id = "BOOK00{}".format(count)
          
          else:
          
              if(count<100):
              
                  id = "BOOK0{}".format(count)
              
              else:
              
                  id = "BOOK{}".format(count)
          
          tmp_query_sachteen_item = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',100,N'book',N'{}',N'quyển'),".format(id,itemlink,imagelink,nameitem,price,des,barcode,ncc)
          tmp_query_sachteen_infor = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',N'{}',N'{}'),".format(id,content_type,book_type,size,page_number,author,translator,nxb,nph)
          query_sachteen_item = query_sachteen_item + tmp_query_sachteen_item + "\n"
          query_sachteen_infor = query_sachteen_infor + tmp_query_sachteen_infor + "\n"
          count+=1
with open("query_sachteen_item.txt","w") as qf:
  qf.write(query_sachteen_item)
  qf.close()
with open("query_sachteen_infor.txt","w") as qf:
  qf.write(query_sachteen_infor)
  qf.close()

from csv import reader
# open file in read mode
query_sachthieunhi_item = ""
query_sachthieunhi_infor = ""
with open('/content/sachthieunhi_new2.csv', 'r') as read_obj:
    # pass the file object to reader() to get the reader object
    csv_reader = reader(read_obj)
    header = next(csv_reader)
    # Iterate over each row in the csv using reader object
    if (header!=None):
      for row in csv_reader:
          # row variable is a list that represents a row in csv
          #print()
          pageNum = 0;
          des = ""
          if (row[7]==None):
            print("true")
            pageNum = 107;
          else:
            pageNum = row[7]
          if (len(row[13])>2000):
            des = row[13][:1950]
          else:
            des = row[13]
          #print(len(row[13]))
          lst_ncc = ["NCC001", "NCC002", "NCC003", "NCC004", "NCC005",
                     "NCC006", "NCC007", "NCC008", "NCC009", "NCC010"]
          ncc = random.choice(lst_ncc)
          itemlink = row[0]
          imagelink = row[1]
          nameitem = row[2]
          price = row[3]
          if(price=="None"):
            price = "100000"
          content_type = row[4]
          if(content_type=="None"):
            content_type = "Tự do"
          book_type = row[5]
          if(book_type=="None"):
            book_type="Bìa mềm"
          size = row[6]
          if(size=="None"):
            size="15.5 x 23.5 cm"
          page_number = row[7]
          if(page_number=="None"):
            page_number = "156"
          author = row[8]
          if(author=="None"):
            author = "Nhiều tác giả"
          translator = row[9]
          if(translator=="None"):
            translator="Hoàng Thắng"
          nxb = row[10]
          if(nxb=="None"):
            nxb="Kin Đồng"
          nph = row[11]
          if(nph=="None"):
            nph="THBooks"
          barcode = row[12]
          quantity = "100"
          if(count<10):
          
              id = "BOOK00{}".format(count)
          
          else:
          
              if(count<100):
              
                  id = "BOOK0{}".format(count)
              
              else:
              
                  id = "BOOK{}".format(count)
          
          tmp_query_sachthieunhi_item = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',100,N'book',N'{}',N'quyển'),".format(id,itemlink,imagelink,nameitem,price,des,barcode,ncc)
          tmp_query_sachthieunhi_infor = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',N'{}',N'{}'),".format(id,content_type,book_type,size,page_number,author,translator,nxb,nph)
          query_sachthieunhi_item = query_sachthieunhi_item + tmp_query_sachthieunhi_item + "\n"
          query_sachthieunhi_infor = query_sachthieunhi_infor + tmp_query_sachthieunhi_infor + "\n"
          count+=1
with open("query_sachthieunhi_item.txt","w") as qf:
  qf.write(query_sachthieunhi_item)
  qf.close()
with open("query_sachthieunhi_infor.txt","w") as qf:
  qf.write(query_sachthieunhi_infor)
  qf.close()

from csv import reader
# open file in read mode
query_sachvanhoc_item = ""
query_sachvanhoc_infor = ""
with open('/content/sachvanhoc_new2.csv', 'r') as read_obj:
    # pass the file object to reader() to get the reader object
    csv_reader = reader(read_obj)
    header = next(csv_reader)
    # Iterate over each row in the csv using reader object
    if (header!=None):
      for row in csv_reader:
          # row variable is a list that represents a row in csv
          #print()
          pageNum = 0;
          des = ""
          if (row[7]==None):
            print("true")
            pageNum = 107;
          else:
            pageNum = row[7]
          if (len(row[13])>2000):
            des = row[13][:1950]
          else:
            des = row[13]
          #print(len(row[13]))
          lst_ncc = ["NCC001", "NCC002", "NCC003", "NCC004", "NCC005",
                     "NCC006", "NCC007", "NCC008", "NCC009", "NCC010"]
          ncc = random.choice(lst_ncc)
          itemlink = row[0]
          imagelink = row[1]
          nameitem = row[2]
          price = row[3]
          if(price=="None"):
            price = "100000"
          content_type = row[4]
          if(content_type=="None"):
            content_type = "Tự do"
          book_type = row[5]
          if(book_type=="None"):
            book_type="Bìa mềm"
          size = row[6]
          if(size=="None"):
            size="15.5 x 23.5 cm"
          page_number = row[7]
          if(page_number=="None"):
            page_number = "156"
          author = row[8]
          if(author=="None"):
            author = "Nhiều tác giả"
          translator = row[9]
          if(translator=="None"):
            translator="Hoàng Thắng"
          nxb = row[10]
          if(nxb=="None"):
            nxb="Kin Đồng"
          nph = row[11]
          if(nph=="None"):
            nph="THBooks"
          barcode = row[12]
          quantity = "100"
          if(count<10):
          
              id = "BOOK00{}".format(count)
          
          else:
          
              if(count<100):
              
                  id = "BOOK0{}".format(count)
              
              else:
              
                  id = "BOOK{}".format(count)
          
          tmp_query_sachvanhoc_item = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',100,N'book',N'{}',N'quyển'),".format(id,itemlink,imagelink,nameitem,price,des,barcode,ncc)
          tmp_query_sachvanhoc_infor = "(N'{}',N'{}',N'{}',N'{}',{},N'{}',N'{}',N'{}',N'{}'),".format(id,content_type,book_type,size,page_number,author,translator,nxb,nph)
          query_sachvanhoc_item = query_sachvanhoc_item + tmp_query_sachvanhoc_item + "\n"
          query_sachvanhoc_infor = query_sachvanhoc_infor + tmp_query_sachvanhoc_infor + "\n"
          count+=1
with open("query_sachvanhoc_item.txt","w") as qf:
  qf.write(query_sachvanhoc_item)
  qf.close()
with open("query_sachvanhoc_infor.txt","w") as qf:
  qf.write(query_sachvanhoc_infor)
  qf.close()